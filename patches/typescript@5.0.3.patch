diff --git a/lib/lib.dom.d.ts b/lib/lib.dom.d.ts
index 4a1be1170b5f39cc844bdf0a1c5b89872380c40c..bb11c65dee0d9e8f95220c76f8d852597beeea6f 100644
--- a/lib/lib.dom.d.ts
+++ b/lib/lib.dom.d.ts
@@ -11123,47 +11123,6 @@ declare var PictureInPictureWindow: {
     new(): PictureInPictureWindow;
 };
 
-/**
- * Provides information about a browser plugin.
- * @deprecated
- */
-interface Plugin {
-    /**
-     * Returns the plugin's description.
-     * @deprecated
-     */
-    readonly description: string;
-    /**
-     * Returns the plugin library's filename, if applicable on the current platform.
-     * @deprecated
-     */
-    readonly filename: string;
-    /**
-     * Returns the number of MIME types, represented by MimeType objects, supported by the plugin.
-     * @deprecated
-     */
-    readonly length: number;
-    /**
-     * Returns the plugin's name.
-     * @deprecated
-     */
-    readonly name: string;
-    /**
-     * Returns the specified MimeType object.
-     * @deprecated
-     */
-    item(index: number): MimeType | null;
-    /** @deprecated */
-    namedItem(name: string): MimeType | null;
-    [index: number]: MimeType;
-}
-
-/** @deprecated */
-declare var Plugin: {
-    prototype: Plugin;
-    new(): Plugin;
-};
-
 /**
  * Used to store a list of Plugin objects describing the available plugins; it's returned by the window.navigator.pluginsÂ property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem("name") methods.
  * @deprecated
diff --git a/lib/lib.dom.iterable.d.ts b/lib/lib.dom.iterable.d.ts
index 56d6fdcbcd63dd5417003771ef5fa8648b9e45b4..926116a1635e80f1924fa01de6a8dbb53fcf87fb 100644
--- a/lib/lib.dom.iterable.d.ts
+++ b/lib/lib.dom.iterable.d.ts
@@ -199,14 +199,6 @@ interface NodeListOf<TNode extends Node> {
     values(): IterableIterator<TNode>;
 }
 
-interface Plugin {
-    [Symbol.iterator](): IterableIterator<MimeType>;
-}
-
-interface PluginArray {
-    [Symbol.iterator](): IterableIterator<Plugin>;
-}
-
 interface RTCRtpTransceiver {
     setCodecPreferences(codecs: Iterable<RTCRtpCodecCapability>): void;
 }